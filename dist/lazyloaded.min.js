/* lazyloaded v1.0.0 | https://github.com/stamat/lazyloaded | MIT License */
(()=>{var e=class{constructor(e=".lazyloaded",t=null,s={}){return this.selector=e,this.px_ratio=window.hasOwnProperty("devicePixelRatio")?window.devicePixelRatio:1,this.callback=t,this.observer=null,this.options=s||{},this.init(this.selector)}parseSrcset(e){let t=null;const s={},r=[];for(const o of e.split(",")){const e=o.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"").split(/[\s\uFEFF\xA0]+/g);e.length>1&&(/x$/i.test(e[1])?(t="ratio",e[1]=parseFloat(e[1].replace(/x$/i,""))):(t="size",e[1]=parseInt(e[1].replace(/px$|vw$|w$/i,""),10)),Number.isNaN(e[1])||(r.push(e[1]),s[e[1]]=e[0]))}return{type:t,srcset:s,sizes:r}}loadImage(e){let t=e.getAttribute("data-src");const s=e.getAttribute("data-srcset");if(s){const e=this.parseSrcset(s),r=this.closest(e.sizes,e.type);t=e.srcset[r]}t&&t.length&&function(e,t){const s=new Image;t&&s.addEventListener("load",t,!1),s.src=e}(t,(()=>{const s=e.getAttribute("data-background");!s||""!==s&&"true"!==s?e.src=t:e.style.backgroundImage=`url(${t})`,"function"==typeof this.callback&&this.callback(e),e.classList.add(`${this.selector}--loaded`)}))}loadAll(e){if(e&&e.length)for(const t of e)this.loadImage(t),this.observer&&this.observer.unobserve(t)}observe(e,t){for(const t of e)if(t.isIntersecting){const e=t.target;this.loadImage(e),this.observer.unobserve(e)}}init(e){const t=document.querySelectorAll(e);if(t&&t.length)if(window.hasOwnProperty("IntersectionObserver")){this.observer=this.observer||new IntersectionObserver(this.observe.bind(this),this.options);for(const e of t)this.observer.observe(e)}else this.loadAll(t)}add(e){if(e.hasOwnProperty("length")||(e=[e]),this.observer)for(const t of e)this.observer.observe(t);else this.loadAll(e)}closest(e,t){let s=window.innerWidth*this.px_ratio;return"ratio"===t&&(s=this.px_ratio),function(e,t){return t.reduce((function(t,s){return Math.abs(s-e)<Math.abs(t-e)?s:t}))}(e,s)}};window.LazyLoaded||(window.LazyLoaded=new e)})();