/* lazyloaded v1.0.1 | https://github.com/stamat/lazyloaded | MIT License */
(()=>{function n(t){return typeof t=="function"}function a(t,e){return e.reduce(function(s,r){return Math.abs(r-t)<Math.abs(s-t)?r:s})}function c(t,e){const s=new Image;e&&s.addEventListener("load",e,!1),s.src=t}var l=class{constructor(t=".js-lazyloaded",e=null,s={}){return this.selector=t,this.px_ratio=window.hasOwnProperty("devicePixelRatio")?window.devicePixelRatio:1,this.callback=e,this.observer=null,this.options=s||{},this.init(this.selector)}parseSrcset(t){let e=null;const s={},r=[];for(const o of t.split(",")){const i=o.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"").split(/[\s\uFEFF\xA0]+/g);!i.length>1||(/x$/i.test(i[1])?(e="ratio",i[1]=parseFloat(i[1].replace(/x$/i,""))):(e="size",i[1]=parseInt(i[1].replace(/px$|vw$|w$/i,""),10)),Number.isNaN(i[1])||(r.push(i[1]),s[i[1]]=i[0]))}return{type:e,srcset:s,sizes:r}}loadImage(t){let e=t.getAttribute("data-src");const s=t.getAttribute("data-srcset");if(s){const r=this.parseSrcset(s),o=this.closest(r.sizes,r.type);e=r.srcset[o]}!e||!e.length||c(e,()=>{const r=t.getAttribute("data-background");r&&(r===""||r==="true")?t.style.backgroundImage=`url(${e})`:t.src=e,n(this.callback)&&this.callback(t),t.classList.add(`${this.selector.replace(/^\.(js\-)?/,"")}--loaded`)})}loadAll(t){if(!(!t||!t.length))for(const e of t)this.loadImage(e),this.observer&&this.observer.unobserve(e)}observe(t,e){for(const s of t){if(!s.isIntersecting)continue;const r=s.target;this.loadImage(r),this.observer.unobserve(r)}}init(t){const e=document.querySelectorAll(t);if(!(!e||!e.length)){if(!window.hasOwnProperty("IntersectionObserver"))return this.loadAll(e);this.observer=this.observer||new IntersectionObserver(this.observe.bind(this),this.options);for(const s of e)this.observer.observe(s)}}add(t){if(t.hasOwnProperty("length")||(t=[t]),!this.observer)return this.loadAll(t);for(const e of t)this.observer.observe(e)}closest(t,e){let s=e!=="ratio"?window.innerWidth*this.px_ratio:this.px_ratio;return a(s,t)}},d=l;window.LazyLoaded||(window.LazyLoaded=d)})();
